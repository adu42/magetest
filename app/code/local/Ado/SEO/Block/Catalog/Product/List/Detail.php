<?php

/**
 * Ado Ciobanu
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @package     Ado_Seo
 * @copyright   Copyright (c) 2013 Ado Ciobanu
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 *
 *  by@ado
 *  xml :
 *  <action method="addAttribute"><value>*</value></action>
 */
class Ado_SEO_Block_Catalog_Product_List_Detail extends Mage_Catalog_Block_Product_View
{
    protected $_item;
    protected function _prepareLayout()
    {
      //什么都不用做
    }

    public function setProduct($item){
        $this->_item = $item;
        return $this;
    }

    public function getProduct(){
        return $this->_item;
    }

    /**
     * $excludeAttr is optional array of attribute codes to
     * exclude them from additional data array
     *
     * @param array $excludeAttr
     * @return array
     */
    public function getAdditionalData(array $excludeAttr = array())
    {
        $data = array();
        $product = $this->getProduct();
        $attributes = $product->getAttributes();
        foreach ($attributes as $attribute) {
//            if ($attribute->getIsVisibleOnFront() && $attribute->getIsUserDefined() && !in_array($attribute->getAttributeCode(), $excludeAttr)) {
            if ($attribute->getIsVisibleOnFront() && !in_array($attribute->getAttributeCode(), $excludeAttr)) {
                $value = $attribute->getFrontend()->getValue($product);

                if ((string)$value == '') {
                    $value = Mage::helper('catalog')->__('No');
                } elseif ($attribute->getFrontendInput() == 'price' && is_string($value)) {
                    $value = Mage::app()->getStore()->convertPrice($value, true);
                }

                if (is_string($value) && strlen($value)) {
                    $data[$attribute->getAttributeCode()] = array(
                        'label' => $attribute->getStoreLabel(),
                        'value' => $value,
                        'code'  => $attribute->getAttributeCode()
                    );
                }
            }
        }
        return $data;
    }

    /**
     * 获取最新的一个客户评价
     * @return mixed
     */
    public function getLastReview(){
        return Mage::getModel('review/review')->getCollection()
            ->addStatusFilter(Mage_Review_Model_Review::STATUS_APPROVED)
            ->addEntityFilter('product', $this->getProduct()->getId())
            ->setDateOrder()
            ->getFirstItem();
    }

    /**
     * 评论数
     * @return string
     */
    public function getReviewSummaryHtml()
    {
        return parent::getReviewsSummaryHtml($this->getProduct(), 'short', false); // TODO: Change the autogenerated stub
    }


    /**
     *  缓存实施
     * @return array
     */
    public function getCacheTags()
    {
        return array_merge(parent::getCacheTags(), $this->getItem()->getCacheIdTags());
    }



}